
MaskedAES_R1.elf:     file format elf32-littlearm


Disassembly of section .text:

08000000 <vector_table>:
 8000000:	00 20 00 20 e1 03 00 08 df 03 00 08 dd 03 00 08     . . ............
	...
 800002c:	df 03 00 08 00 00 00 00 00 00 00 00 df 03 00 08     ................
 800003c:	df 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 800004c:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 800005c:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 800006c:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 800007c:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 800008c:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 800009c:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 80000ac:	dd 03 00 08 dd 03 00 08 dd 03 00 08 dd 03 00 08     ................
 80000bc:	dd 03 00 08                                         ....

080000c0 <main>:
#include "../../elmoasmfunctionsdef.h"

extern void acComputeAES(uint8_t *output, uint8_t *input, uint8_t *key);
extern void acComputeAESMasked(uint8_t *output, uint8_t *input, uint8_t *key);

int main(void) {
 80000c0:	b5f0      	push	{r4, r5, r6, r7, lr}

    int i,j;

    uint8_t *input, *output, *key;

    key = malloc(16*sizeof(uint8_t));
 80000c2:	2010      	movs	r0, #16
#include "../../elmoasmfunctionsdef.h"

extern void acComputeAES(uint8_t *output, uint8_t *input, uint8_t *key);
extern void acComputeAESMasked(uint8_t *output, uint8_t *input, uint8_t *key);

int main(void) {
 80000c4:	b087      	sub	sp, #28

    int i,j;

    uint8_t *input, *output, *key;

    key = malloc(16*sizeof(uint8_t));
 80000c6:	f000 f9c9 	bl	800045c <malloc>
 80000ca:	9002      	str	r0, [sp, #8]
    input = malloc(16*sizeof(uint8_t));
 80000cc:	2010      	movs	r0, #16
 80000ce:	f000 f9c5 	bl	800045c <malloc>
 80000d2:	9003      	str	r0, [sp, #12]
    output = malloc(16*sizeof(uint8_t));
 80000d4:	2010      	movs	r0, #16
 80000d6:	f000 f9c1 	bl	800045c <malloc>
    
    static const uint8_t fixedkey[16] = {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde, 0xf0};
    static const uint8_t fixedinput[16] = {0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90};
    
    U = 0;
 80000da:	2300      	movs	r3, #0
 80000dc:	4a39      	ldr	r2, [pc, #228]	; (80001c4 <main+0x104>)

    uint8_t *input, *output, *key;

    key = malloc(16*sizeof(uint8_t));
    input = malloc(16*sizeof(uint8_t));
    output = malloc(16*sizeof(uint8_t));
 80000de:	9001      	str	r0, [sp, #4]
    
    static const uint8_t fixedkey[16] = {0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde, 0xf0};
    static const uint8_t fixedinput[16] = {0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90};
    
    U = 0;
 80000e0:	7013      	strb	r3, [r2, #0]
    V = 0;
 80000e2:	4a39      	ldr	r2, [pc, #228]	; (80001c8 <main+0x108>)
 80000e4:	9004      	str	r0, [sp, #16]
 80000e6:	7013      	strb	r3, [r2, #0]
    UV = 0;
 80000e8:	4a38      	ldr	r2, [pc, #224]	; (80001cc <main+0x10c>)
 80000ea:	7013      	strb	r3, [r2, #0]
 80000ec:	0002      	movs	r2, r0
 80000ee:	3210      	adds	r2, #16
 80000f0:	9205      	str	r2, [sp, #20]
 80000f2:	0002      	movs	r2, r0
    
    for(j=0;j<16;j++){
 80000f4:	9905      	ldr	r1, [sp, #20]
        output[j] = 0x00;
 80000f6:	7013      	strb	r3, [r2, #0]
 80000f8:	3201      	adds	r2, #1
    
    U = 0;
    V = 0;
    UV = 0;
    
    for(j=0;j<16;j++){
 80000fa:	4291      	cmp	r1, r2
 80000fc:	d1fa      	bne.n	80000f4 <main+0x34>
 80000fe:	4f34      	ldr	r7, [pc, #208]	; (80001d0 <main+0x110>)
    for(i=0;i<NOTRACES;i++){

        readdata(&U);
        readdata(&V);
        
        for(j=0;j<16;j++){
 8000100:	2400      	movs	r4, #0
        output[j] = 0x00;
    }
    
    for(i=0;i<NOTRACES;i++){

        readdata(&U);
 8000102:	4830      	ldr	r0, [pc, #192]	; (80001c4 <main+0x104>)
 8000104:	f000 f92a 	bl	800035c <readdata>
        readdata(&V);
 8000108:	482f      	ldr	r0, [pc, #188]	; (80001c8 <main+0x108>)
 800010a:	f000 f927 	bl	800035c <readdata>
 800010e:	9d03      	ldr	r5, [sp, #12]
        
        for(j=0;j<16;j++){
            readdata(&input[j]);
 8000110:	0028      	movs	r0, r5
 8000112:	f000 f923 	bl	800035c <readdata>
            input[j] = fixedinput[j];
 8000116:	4b2f      	ldr	r3, [pc, #188]	; (80001d4 <main+0x114>)
            key[j] = fixedkey[j];
 8000118:	9a02      	ldr	r2, [sp, #8]
        readdata(&U);
        readdata(&V);
        
        for(j=0;j<16;j++){
            readdata(&input[j]);
            input[j] = fixedinput[j];
 800011a:	5ce3      	ldrb	r3, [r4, r3]
 800011c:	702b      	strb	r3, [r5, #0]
            key[j] = fixedkey[j];
 800011e:	4b2e      	ldr	r3, [pc, #184]	; (80001d8 <main+0x118>)
 8000120:	3501      	adds	r5, #1
 8000122:	5ce3      	ldrb	r3, [r4, r3]
 8000124:	5513      	strb	r3, [r2, r4]
    for(i=0;i<NOTRACES;i++){

        readdata(&U);
        readdata(&V);
        
        for(j=0;j<16;j++){
 8000126:	3401      	adds	r4, #1
 8000128:	2c10      	cmp	r4, #16
 800012a:	d1f1      	bne.n	8000110 <main+0x50>
            readdata(&input[j]);
            input[j] = fixedinput[j];
            key[j] = fixedkey[j];
        }
        
        setmaskdataflowstart(0);
 800012c:	2000      	movs	r0, #0
 800012e:	f000 f944 	bl	80003ba <setmaskdataflowstart>
        initialisekeyflow(&U);
 8000132:	4e24      	ldr	r6, [pc, #144]	; (80001c4 <main+0x104>)
 8000134:	3f01      	subs	r7, #1
 8000136:	0030      	movs	r0, r6
 8000138:	f000 f92e 	bl	8000398 <initialisekeyflow>
        
        setmaskdataflowstart(8);
 800013c:	2008      	movs	r0, #8
 800013e:	f000 f93c 	bl	80003ba <setmaskdataflowstart>
        initialisekeyflow(&V);
 8000142:	4d21      	ldr	r5, [pc, #132]	; (80001c8 <main+0x108>)
 8000144:	0028      	movs	r0, r5
 8000146:	f000 f927 	bl	8000398 <initialisekeyflow>
        
        //Trigger started in asm file
        acComputeAESMasked(output, input, key);
 800014a:	9a02      	ldr	r2, [sp, #8]
 800014c:	9903      	ldr	r1, [sp, #12]
 800014e:	9801      	ldr	r0, [sp, #4]
 8000150:	f000 f844 	bl	80001dc <acComputeAESMasked>
    
    for(j=0;j<16;j++){
        output[j] = 0x00;
    }
    
    for(i=0;i<NOTRACES;i++){
 8000154:	2f00      	cmp	r7, #0
 8000156:	d1d3      	bne.n	8000100 <main+0x40>
        
        //Trigger started in asm file
        acComputeAESMasked(output, input, key);
    }
    
    resetdatafile();
 8000158:	f000 f937 	bl	80003ca <resetdatafile>

    for(j=0;j<16;j++){
        output[j] = 0x00;
 800015c:	9b04      	ldr	r3, [sp, #16]
 800015e:	701f      	strb	r7, [r3, #0]
 8000160:	3301      	adds	r3, #1
 8000162:	9304      	str	r3, [sp, #16]
        acComputeAESMasked(output, input, key);
    }
    
    resetdatafile();

    for(j=0;j<16;j++){
 8000164:	9a04      	ldr	r2, [sp, #16]
 8000166:	9b05      	ldr	r3, [sp, #20]
 8000168:	4293      	cmp	r3, r2
 800016a:	d1f7      	bne.n	800015c <main+0x9c>
 800016c:	4f18      	ldr	r7, [pc, #96]	; (80001d0 <main+0x110>)
        output[j] = 0x00;
    }
    
    for(i=0;i<NOTRACES;i++){
        
        readdata(&U);
 800016e:	0030      	movs	r0, r6
 8000170:	f000 f8f4 	bl	800035c <readdata>
        readdata(&V);
 8000174:	0028      	movs	r0, r5
 8000176:	f000 f8f1 	bl	800035c <readdata>
        
        for(j=0;j<16;j++){
 800017a:	2400      	movs	r4, #0
            readdata(&input[j]);
 800017c:	9b03      	ldr	r3, [sp, #12]
 800017e:	1918      	adds	r0, r3, r4
 8000180:	f000 f8ec 	bl	800035c <readdata>
            key[j] = fixedkey[j];
 8000184:	4b14      	ldr	r3, [pc, #80]	; (80001d8 <main+0x118>)
 8000186:	9a02      	ldr	r2, [sp, #8]
 8000188:	5ce3      	ldrb	r3, [r4, r3]
 800018a:	5513      	strb	r3, [r2, r4]
    for(i=0;i<NOTRACES;i++){
        
        readdata(&U);
        readdata(&V);
        
        for(j=0;j<16;j++){
 800018c:	3401      	adds	r4, #1
 800018e:	2c10      	cmp	r4, #16
 8000190:	d1f4      	bne.n	800017c <main+0xbc>
            readdata(&input[j]);
            key[j] = fixedkey[j];
        }
        
        setmaskdataflowstart(0);
 8000192:	2000      	movs	r0, #0
 8000194:	f000 f911 	bl	80003ba <setmaskdataflowstart>
        initialisekeyflow(&U);
 8000198:	0030      	movs	r0, r6
 800019a:	f000 f8fd 	bl	8000398 <initialisekeyflow>
        
        setmaskdataflowstart(8);
 800019e:	2008      	movs	r0, #8
 80001a0:	f000 f90b 	bl	80003ba <setmaskdataflowstart>
        initialisekeyflow(&V);
 80001a4:	0028      	movs	r0, r5
 80001a6:	f000 f8f7 	bl	8000398 <initialisekeyflow>
 80001aa:	3f01      	subs	r7, #1
        
        //Trigger started in asm file
        acComputeAESMasked(output, input, key);
 80001ac:	9a02      	ldr	r2, [sp, #8]
 80001ae:	9903      	ldr	r1, [sp, #12]
 80001b0:	9801      	ldr	r0, [sp, #4]
 80001b2:	f000 f813 	bl	80001dc <acComputeAESMasked>

    for(j=0;j<16;j++){
        output[j] = 0x00;
    }
    
    for(i=0;i<NOTRACES;i++){
 80001b6:	2f00      	cmp	r7, #0
 80001b8:	d1d9      	bne.n	800016e <main+0xae>
        
        //Trigger started in asm file
        acComputeAESMasked(output, input, key);
    }
    
    endprogram();
 80001ba:	f000 f8e6 	bl	800038a <endprogram>

    return 0;
}
 80001be:	0038      	movs	r0, r7
 80001c0:	b007      	add	sp, #28
 80001c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80001c4:	20000b4c 	.word	0x20000b4c
 80001c8:	20000b4d 	.word	0x20000b4d
 80001cc:	20000b4e 	.word	0x20000b4e
 80001d0:	00004e20 	.word	0x00004e20
 80001d4:	08000c70 	.word	0x08000c70
 80001d8:	08000c80 	.word	0x08000c80

080001dc <acComputeAESMasked>:
 80001dc:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 80001de:	4680      	mov	r8, r0
 80001e0:	4689      	mov	r9, r1
 80001e2:	4692      	mov	sl, r2
 80001e4:	484d      	ldr	r0, [pc, #308]	; (800031c <mix_columnmasked+0x70>)
 80001e6:	7801      	ldrb	r1, [r0, #0]
 80001e8:	484d      	ldr	r0, [pc, #308]	; (8000320 <mix_columnmasked+0x74>)
 80001ea:	7802      	ldrb	r2, [r0, #0]
 80001ec:	484d      	ldr	r0, [pc, #308]	; (8000324 <mix_columnmasked+0x78>)
 80001ee:	404a      	eors	r2, r1
 80001f0:	7002      	strb	r2, [r0, #0]
 80001f2:	23ff      	movs	r3, #255	; 0xff
 80001f4:	4c4c      	ldr	r4, [pc, #304]	; (8000328 <mix_columnmasked+0x7c>)
 80001f6:	4d4d      	ldr	r5, [pc, #308]	; (800032c <mix_columnmasked+0x80>)

080001f8 <masksbox>:
 80001f8:	4610      	mov	r0, r2
 80001fa:	4058      	eors	r0, r3
 80001fc:	5c26      	ldrb	r6, [r4, r0]
 80001fe:	404e      	eors	r6, r1
 8000200:	54ee      	strb	r6, [r5, r3]
 8000202:	3b01      	subs	r3, #1
 8000204:	daf8      	bge.n	80001f8 <masksbox>
 8000206:	4640      	mov	r0, r8
 8000208:	4649      	mov	r1, r9
 800020a:	4652      	mov	r2, sl
 800020c:	4b43      	ldr	r3, [pc, #268]	; (800031c <mix_columnmasked+0x70>)
 800020e:	781b      	ldrb	r3, [r3, #0]
 8000210:	4c43      	ldr	r4, [pc, #268]	; (8000320 <mix_columnmasked+0x74>)
 8000212:	7824      	ldrb	r4, [r4, #0]
 8000214:	250f      	movs	r5, #15

08000216 <arrangedatamasked>:
 8000216:	00ae      	lsls	r6, r5, #2
 8000218:	270c      	movs	r7, #12
 800021a:	403e      	ands	r6, r7
 800021c:	08af      	lsrs	r7, r5, #2
 800021e:	407e      	eors	r6, r7
 8000220:	5d8f      	ldrb	r7, [r1, r6]
 8000222:	405f      	eors	r7, r3
 8000224:	5547      	strb	r7, [r0, r5]
 8000226:	3d01      	subs	r5, #1
 8000228:	daf5      	bge.n	8000216 <arrangedatamasked>
 800022a:	250f      	movs	r5, #15

0800022c <arrangedatakeymasked>:
 800022c:	00ae      	lsls	r6, r5, #2
 800022e:	270c      	movs	r7, #12
 8000230:	403e      	ands	r6, r7
 8000232:	08af      	lsrs	r7, r5, #2
 8000234:	407e      	eors	r6, r7
 8000236:	5d97      	ldrb	r7, [r2, r6]
 8000238:	4067      	eors	r7, r4
 800023a:	554f      	strb	r7, [r1, r5]
 800023c:	3d01      	subs	r5, #1
 800023e:	daf5      	bge.n	800022c <arrangedatakeymasked>
 8000240:	680b      	ldr	r3, [r1, #0]
 8000242:	6013      	str	r3, [r2, #0]
 8000244:	684b      	ldr	r3, [r1, #4]
 8000246:	6053      	str	r3, [r2, #4]
 8000248:	688b      	ldr	r3, [r1, #8]
 800024a:	6093      	str	r3, [r2, #8]
 800024c:	68cb      	ldr	r3, [r1, #12]
 800024e:	60d3      	str	r3, [r2, #12]
 8000250:	4640      	mov	r0, r8
 8000252:	4649      	mov	r1, r9
 8000254:	4652      	mov	r2, sl
 8000256:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000258:	20e0      	movs	r0, #224	; 0xe0
 800025a:	0600      	lsls	r0, r0, #24
 800025c:	2104      	movs	r1, #4
 800025e:	4048      	eors	r0, r1
 8000260:	2101      	movs	r1, #1
 8000262:	6001      	str	r1, [r0, #0]
 8000264:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000266:	240f      	movs	r4, #15
 8000268:	4d30      	ldr	r5, [pc, #192]	; (800032c <mix_columnmasked+0x80>)

0800026a <AddKeySubBytes>:
 800026a:	5d06      	ldrb	r6, [r0, r4]
 800026c:	5d17      	ldrb	r7, [r2, r4]
 800026e:	407e      	eors	r6, r7
 8000270:	5daf      	ldrb	r7, [r5, r6]
 8000272:	550f      	strb	r7, [r1, r4]
 8000274:	3c01      	subs	r4, #1
 8000276:	daf8      	bge.n	800026a <AddKeySubBytes>
 8000278:	684c      	ldr	r4, [r1, #4]
 800027a:	2508      	movs	r5, #8
 800027c:	41ec      	rors	r4, r5
 800027e:	604c      	str	r4, [r1, #4]
 8000280:	688c      	ldr	r4, [r1, #8]
 8000282:	2510      	movs	r5, #16
 8000284:	41ec      	rors	r4, r5
 8000286:	608c      	str	r4, [r1, #8]
 8000288:	68cc      	ldr	r4, [r1, #12]
 800028a:	2518      	movs	r5, #24
 800028c:	41ec      	rors	r4, r5
 800028e:	60cc      	str	r4, [r1, #12]
 8000290:	4f27      	ldr	r7, [pc, #156]	; (8000330 <mix_columnmasked+0x84>)
 8000292:	4d23      	ldr	r5, [pc, #140]	; (8000320 <mix_columnmasked+0x74>)
 8000294:	782b      	ldrb	r3, [r5, #0]
 8000296:	4d27      	ldr	r5, [pc, #156]	; (8000334 <mix_columnmasked+0x88>)
 8000298:	5cee      	ldrb	r6, [r5, r3]
 800029a:	0235      	lsls	r5, r6, #8
 800029c:	406e      	eors	r6, r5
 800029e:	0435      	lsls	r5, r6, #16
 80002a0:	406e      	eors	r6, r5
 80002a2:	021d      	lsls	r5, r3, #8
 80002a4:	406b      	eors	r3, r5
 80002a6:	041d      	lsls	r5, r3, #16
 80002a8:	406b      	eors	r3, r5
 80002aa:	2403      	movs	r4, #3

080002ac <mix_columnmasked>:
 80002ac:	46a4      	mov	ip, r4
 80002ae:	4620      	mov	r0, r4
 80002b0:	464c      	mov	r4, r9
 80002b2:	0081      	lsls	r1, r0, #2
 80002b4:	5861      	ldr	r1, [r4, r1]
 80002b6:	3001      	adds	r0, #1
 80002b8:	2403      	movs	r4, #3
 80002ba:	4020      	ands	r0, r4
 80002bc:	464c      	mov	r4, r9
 80002be:	0085      	lsls	r5, r0, #2
 80002c0:	5965      	ldr	r5, [r4, r5]
 80002c2:	4059      	eors	r1, r3
 80002c4:	4069      	eors	r1, r5
 80002c6:	09cc      	lsrs	r4, r1, #7
 80002c8:	683a      	ldr	r2, [r7, #0]
 80002ca:	4014      	ands	r4, r2
 80002cc:	68ba      	ldr	r2, [r7, #8]
 80002ce:	4354      	muls	r4, r2
 80002d0:	0049      	lsls	r1, r1, #1
 80002d2:	687a      	ldr	r2, [r7, #4]
 80002d4:	4011      	ands	r1, r2
 80002d6:	4061      	eors	r1, r4
 80002d8:	4069      	eors	r1, r5
 80002da:	3001      	adds	r0, #1
 80002dc:	2403      	movs	r4, #3
 80002de:	4020      	ands	r0, r4
 80002e0:	464c      	mov	r4, r9
 80002e2:	0085      	lsls	r5, r0, #2
 80002e4:	5965      	ldr	r5, [r4, r5]
 80002e6:	4069      	eors	r1, r5
 80002e8:	3001      	adds	r0, #1
 80002ea:	2403      	movs	r4, #3
 80002ec:	4020      	ands	r0, r4
 80002ee:	464c      	mov	r4, r9
 80002f0:	0085      	lsls	r5, r0, #2
 80002f2:	5965      	ldr	r5, [r4, r5]
 80002f4:	4069      	eors	r1, r5
 80002f6:	4071      	eors	r1, r6
 80002f8:	4665      	mov	r5, ip
 80002fa:	00ad      	lsls	r5, r5, #2
 80002fc:	4640      	mov	r0, r8
 80002fe:	5141      	str	r1, [r0, r5]
 8000300:	4664      	mov	r4, ip
 8000302:	3c01      	subs	r4, #1
 8000304:	dad2      	bge.n	80002ac <mix_columnmasked>
 8000306:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000308:	24e0      	movs	r4, #224	; 0xe0
 800030a:	0624      	lsls	r4, r4, #24
 800030c:	2504      	movs	r5, #4
 800030e:	406c      	eors	r4, r5
 8000310:	2100      	movs	r1, #0
 8000312:	6025      	str	r5, [r4, #0]
 8000314:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000316:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000318:	4770      	bx	lr
 800031a:	0000      	.short	0x0000
 800031c:	20000b4c 	.word	0x20000b4c
 8000320:	20000b4d 	.word	0x20000b4d
 8000324:	20000b4e 	.word	0x20000b4e
 8000328:	2000020c 	.word	0x2000020c
 800032c:	20000000 	.word	0x20000000
 8000330:	20000200 	.word	0x20000200
 8000334:	20000100 	.word	0x20000100

08000338 <starttrigger>:
 8000338:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800033a:	24e0      	movs	r4, #224	; 0xe0
 800033c:	0624      	lsls	r4, r4, #24
 800033e:	2504      	movs	r5, #4
 8000340:	406c      	eors	r4, r5
 8000342:	2501      	movs	r5, #1
 8000344:	6025      	str	r5, [r4, #0]
 8000346:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000348:	4770      	bx	lr

0800034a <endtrigger>:
 800034a:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800034c:	24e0      	movs	r4, #224	; 0xe0
 800034e:	0624      	lsls	r4, r4, #24
 8000350:	2504      	movs	r5, #4
 8000352:	406c      	eors	r4, r5
 8000354:	2500      	movs	r5, #0
 8000356:	6025      	str	r5, [r4, #0]
 8000358:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 800035a:	4770      	bx	lr

0800035c <readdata>:
 800035c:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800035e:	24e1      	movs	r4, #225	; 0xe1
 8000360:	0624      	lsls	r4, r4, #24
 8000362:	6821      	ldr	r1, [r4, #0]
 8000364:	7001      	strb	r1, [r0, #0]
 8000366:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000368:	4770      	bx	lr

0800036a <randdata>:
 800036a:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800036c:	24e1      	movs	r4, #225	; 0xe1
 800036e:	0624      	lsls	r4, r4, #24
 8000370:	2504      	movs	r5, #4
 8000372:	406c      	eors	r4, r5
 8000374:	6821      	ldr	r1, [r4, #0]
 8000376:	7001      	strb	r1, [r0, #0]
 8000378:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 800037a:	4770      	bx	lr

0800037c <printhex>:
 800037c:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800037e:	24e0      	movs	r4, #224	; 0xe0
 8000380:	0624      	lsls	r4, r4, #24
 8000382:	7805      	ldrb	r5, [r0, #0]
 8000384:	6025      	str	r5, [r4, #0]
 8000386:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000388:	4770      	bx	lr

0800038a <endprogram>:
 800038a:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800038c:	24f0      	movs	r4, #240	; 0xf0
 800038e:	0624      	lsls	r4, r4, #24
 8000390:	2500      	movs	r5, #0
 8000392:	6025      	str	r5, [r4, #0]
 8000394:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 8000396:	4770      	bx	lr

08000398 <initialisekeyflow>:
 8000398:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 800039a:	24e0      	movs	r4, #224	; 0xe0
 800039c:	0624      	lsls	r4, r4, #24
 800039e:	2540      	movs	r5, #64	; 0x40
 80003a0:	406c      	eors	r4, r5
 80003a2:	6020      	str	r0, [r4, #0]
 80003a4:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003a6:	4770      	bx	lr

080003a8 <resetkeyflow>:
 80003a8:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003aa:	24e0      	movs	r4, #224	; 0xe0
 80003ac:	0624      	lsls	r4, r4, #24
 80003ae:	2542      	movs	r5, #66	; 0x42
 80003b0:	406c      	eors	r4, r5
 80003b2:	2500      	movs	r5, #0
 80003b4:	6025      	str	r5, [r4, #0]
 80003b6:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003b8:	4770      	bx	lr

080003ba <setmaskdataflowstart>:
 80003ba:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003bc:	24e0      	movs	r4, #224	; 0xe0
 80003be:	0624      	lsls	r4, r4, #24
 80003c0:	2544      	movs	r5, #68	; 0x44
 80003c2:	406c      	eors	r4, r5
 80003c4:	6020      	str	r0, [r4, #0]
 80003c6:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003c8:	4770      	bx	lr

080003ca <resetdatafile>:
 80003ca:	b4ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003cc:	24e0      	movs	r4, #224	; 0xe0
 80003ce:	0624      	lsls	r4, r4, #24
 80003d0:	2546      	movs	r5, #70	; 0x46
 80003d2:	406c      	eors	r4, r5
 80003d4:	2500      	movs	r5, #0
 80003d6:	6025      	str	r5, [r4, #0]
 80003d8:	bcff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7}
 80003da:	4770      	bx	lr

080003dc <blocking_handler>:
 80003dc:	e7fe      	b.n	80003dc <blocking_handler>

080003de <null_handler>:
 80003de:	4770      	bx	lr

080003e0 <reset_handler>:
 80003e0:	2200      	movs	r2, #0
 80003e2:	4814      	ldr	r0, [pc, #80]	; (8000434 <reset_handler+0x54>)
 80003e4:	4b14      	ldr	r3, [pc, #80]	; (8000438 <reset_handler+0x58>)
 80003e6:	4915      	ldr	r1, [pc, #84]	; (800043c <reset_handler+0x5c>)
 80003e8:	1814      	adds	r4, r2, r0
 80003ea:	18d0      	adds	r0, r2, r3
 80003ec:	4288      	cmp	r0, r1
 80003ee:	d203      	bcs.n	80003f8 <reset_handler+0x18>
 80003f0:	6824      	ldr	r4, [r4, #0]
 80003f2:	3204      	adds	r2, #4
 80003f4:	6004      	str	r4, [r0, #0]
 80003f6:	e7f4      	b.n	80003e2 <reset_handler+0x2>
 80003f8:	4a11      	ldr	r2, [pc, #68]	; (8000440 <reset_handler+0x60>)
 80003fa:	4290      	cmp	r0, r2
 80003fc:	d202      	bcs.n	8000404 <reset_handler+0x24>
 80003fe:	2100      	movs	r1, #0
 8000400:	c002      	stmia	r0!, {r1}
 8000402:	e7f9      	b.n	80003f8 <reset_handler+0x18>
 8000404:	4c0f      	ldr	r4, [pc, #60]	; (8000444 <reset_handler+0x64>)
 8000406:	4810      	ldr	r0, [pc, #64]	; (8000448 <reset_handler+0x68>)
 8000408:	4284      	cmp	r4, r0
 800040a:	d202      	bcs.n	8000412 <reset_handler+0x32>
 800040c:	cc08      	ldmia	r4!, {r3}
 800040e:	4798      	blx	r3
 8000410:	e7f9      	b.n	8000406 <reset_handler+0x26>
 8000412:	4c0e      	ldr	r4, [pc, #56]	; (800044c <reset_handler+0x6c>)
 8000414:	4b0e      	ldr	r3, [pc, #56]	; (8000450 <reset_handler+0x70>)
 8000416:	429c      	cmp	r4, r3
 8000418:	d202      	bcs.n	8000420 <reset_handler+0x40>
 800041a:	cc01      	ldmia	r4!, {r0}
 800041c:	4780      	blx	r0
 800041e:	e7f9      	b.n	8000414 <reset_handler+0x34>
 8000420:	f7ff fe4e 	bl	80000c0 <main>
 8000424:	4c0b      	ldr	r4, [pc, #44]	; (8000454 <reset_handler+0x74>)
 8000426:	490c      	ldr	r1, [pc, #48]	; (8000458 <reset_handler+0x78>)
 8000428:	428c      	cmp	r4, r1
 800042a:	d202      	bcs.n	8000432 <reset_handler+0x52>
 800042c:	cc04      	ldmia	r4!, {r2}
 800042e:	4790      	blx	r2
 8000430:	e7f9      	b.n	8000426 <reset_handler+0x46>
 8000432:	46c0      	nop			; (mov r8, r8)
 8000434:	08000c94 	.word	0x08000c94
 8000438:	20000000 	.word	0x20000000
 800043c:	20000b4c 	.word	0x20000b4c
 8000440:	20000b8c 	.word	0x20000b8c
 8000444:	08000c94 	.word	0x08000c94
 8000448:	08000c94 	.word	0x08000c94
 800044c:	08000c94 	.word	0x08000c94
 8000450:	08000c94 	.word	0x08000c94
 8000454:	08000c94 	.word	0x08000c94
 8000458:	08000c94 	.word	0x08000c94

0800045c <malloc>:
 800045c:	b510      	push	{r4, lr}
 800045e:	4b03      	ldr	r3, [pc, #12]	; (800046c <malloc+0x10>)
 8000460:	0001      	movs	r1, r0
 8000462:	6818      	ldr	r0, [r3, #0]
 8000464:	f000 f804 	bl	8000470 <_malloc_r>
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)
 800046c:	20000b48 	.word	0x20000b48

08000470 <_malloc_r>:
 8000470:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000472:	465f      	mov	r7, fp
 8000474:	464d      	mov	r5, r9
 8000476:	4656      	mov	r6, sl
 8000478:	4644      	mov	r4, r8
 800047a:	b4f0      	push	{r4, r5, r6, r7}
 800047c:	000d      	movs	r5, r1
 800047e:	350b      	adds	r5, #11
 8000480:	b083      	sub	sp, #12
 8000482:	0007      	movs	r7, r0
 8000484:	2d16      	cmp	r5, #22
 8000486:	d800      	bhi.n	800048a <_malloc_r+0x1a>
 8000488:	e0a8      	b.n	80005dc <_malloc_r+0x16c>
 800048a:	2307      	movs	r3, #7
 800048c:	439d      	bics	r5, r3
 800048e:	d500      	bpl.n	8000492 <_malloc_r+0x22>
 8000490:	e0ce      	b.n	8000630 <_malloc_r+0x1c0>
 8000492:	42a9      	cmp	r1, r5
 8000494:	d900      	bls.n	8000498 <_malloc_r+0x28>
 8000496:	e0cb      	b.n	8000630 <_malloc_r+0x1c0>
 8000498:	f000 fa94 	bl	80009c4 <__malloc_lock>
 800049c:	23f8      	movs	r3, #248	; 0xf8
 800049e:	33ff      	adds	r3, #255	; 0xff
 80004a0:	429d      	cmp	r5, r3
 80004a2:	d800      	bhi.n	80004a6 <_malloc_r+0x36>
 80004a4:	e284      	b.n	80009b0 <_malloc_r+0x540>
 80004a6:	0a6b      	lsrs	r3, r5, #9
 80004a8:	d100      	bne.n	80004ac <_malloc_r+0x3c>
 80004aa:	e0c5      	b.n	8000638 <_malloc_r+0x1c8>
 80004ac:	2b04      	cmp	r3, #4
 80004ae:	d900      	bls.n	80004b2 <_malloc_r+0x42>
 80004b0:	e16c      	b.n	800078c <_malloc_r+0x31c>
 80004b2:	2338      	movs	r3, #56	; 0x38
 80004b4:	09a9      	lsrs	r1, r5, #6
 80004b6:	469c      	mov	ip, r3
 80004b8:	3301      	adds	r3, #1
 80004ba:	4698      	mov	r8, r3
 80004bc:	4488      	add	r8, r1
 80004be:	4643      	mov	r3, r8
 80004c0:	448c      	add	ip, r1
 80004c2:	0059      	lsls	r1, r3, #1
 80004c4:	4ec9      	ldr	r6, [pc, #804]	; (80007ec <_malloc_r+0x37c>)
 80004c6:	0089      	lsls	r1, r1, #2
 80004c8:	1871      	adds	r1, r6, r1
 80004ca:	3908      	subs	r1, #8
 80004cc:	68cc      	ldr	r4, [r1, #12]
 80004ce:	42a1      	cmp	r1, r4
 80004d0:	d017      	beq.n	8000502 <_malloc_r+0x92>
 80004d2:	2303      	movs	r3, #3
 80004d4:	6862      	ldr	r2, [r4, #4]
 80004d6:	439a      	bics	r2, r3
 80004d8:	0013      	movs	r3, r2
 80004da:	1b52      	subs	r2, r2, r5
 80004dc:	2a0f      	cmp	r2, #15
 80004de:	dd00      	ble.n	80004e2 <_malloc_r+0x72>
 80004e0:	e0b0      	b.n	8000644 <_malloc_r+0x1d4>
 80004e2:	2003      	movs	r0, #3
 80004e4:	2a00      	cmp	r2, #0
 80004e6:	db09      	blt.n	80004fc <_malloc_r+0x8c>
 80004e8:	e08d      	b.n	8000606 <_malloc_r+0x196>
 80004ea:	6863      	ldr	r3, [r4, #4]
 80004ec:	4383      	bics	r3, r0
 80004ee:	1b5a      	subs	r2, r3, r5
 80004f0:	2a0f      	cmp	r2, #15
 80004f2:	dd00      	ble.n	80004f6 <_malloc_r+0x86>
 80004f4:	e0a6      	b.n	8000644 <_malloc_r+0x1d4>
 80004f6:	2a00      	cmp	r2, #0
 80004f8:	db00      	blt.n	80004fc <_malloc_r+0x8c>
 80004fa:	e084      	b.n	8000606 <_malloc_r+0x196>
 80004fc:	68e4      	ldr	r4, [r4, #12]
 80004fe:	42a1      	cmp	r1, r4
 8000500:	d1f3      	bne.n	80004ea <_malloc_r+0x7a>
 8000502:	4643      	mov	r3, r8
 8000504:	9300      	str	r3, [sp, #0]
 8000506:	0032      	movs	r2, r6
 8000508:	6934      	ldr	r4, [r6, #16]
 800050a:	3208      	adds	r2, #8
 800050c:	4294      	cmp	r4, r2
 800050e:	d100      	bne.n	8000512 <_malloc_r+0xa2>
 8000510:	e18f      	b.n	8000832 <_malloc_r+0x3c2>
 8000512:	2303      	movs	r3, #3
 8000514:	6861      	ldr	r1, [r4, #4]
 8000516:	4399      	bics	r1, r3
 8000518:	000b      	movs	r3, r1
 800051a:	1b48      	subs	r0, r1, r5
 800051c:	280f      	cmp	r0, #15
 800051e:	dd00      	ble.n	8000522 <_malloc_r+0xb2>
 8000520:	e176      	b.n	8000810 <_malloc_r+0x3a0>
 8000522:	6172      	str	r2, [r6, #20]
 8000524:	6132      	str	r2, [r6, #16]
 8000526:	2800      	cmp	r0, #0
 8000528:	da71      	bge.n	800060e <_malloc_r+0x19e>
 800052a:	4ab1      	ldr	r2, [pc, #708]	; (80007f0 <_malloc_r+0x380>)
 800052c:	4291      	cmp	r1, r2
 800052e:	d900      	bls.n	8000532 <_malloc_r+0xc2>
 8000530:	e134      	b.n	800079c <_malloc_r+0x32c>
 8000532:	2301      	movs	r3, #1
 8000534:	08c8      	lsrs	r0, r1, #3
 8000536:	1082      	asrs	r2, r0, #2
 8000538:	4093      	lsls	r3, r2
 800053a:	6872      	ldr	r2, [r6, #4]
 800053c:	431a      	orrs	r2, r3
 800053e:	00c3      	lsls	r3, r0, #3
 8000540:	199b      	adds	r3, r3, r6
 8000542:	6898      	ldr	r0, [r3, #8]
 8000544:	6072      	str	r2, [r6, #4]
 8000546:	60e3      	str	r3, [r4, #12]
 8000548:	60a0      	str	r0, [r4, #8]
 800054a:	609c      	str	r4, [r3, #8]
 800054c:	0013      	movs	r3, r2
 800054e:	60c4      	str	r4, [r0, #12]
 8000550:	2001      	movs	r0, #1
 8000552:	9900      	ldr	r1, [sp, #0]
 8000554:	108a      	asrs	r2, r1, #2
 8000556:	4090      	lsls	r0, r2
 8000558:	4298      	cmp	r0, r3
 800055a:	d900      	bls.n	800055e <_malloc_r+0xee>
 800055c:	e075      	b.n	800064a <_malloc_r+0x1da>
 800055e:	4203      	tst	r3, r0
 8000560:	d10c      	bne.n	800057c <_malloc_r+0x10c>
 8000562:	2203      	movs	r2, #3
 8000564:	4391      	bics	r1, r2
 8000566:	1d0a      	adds	r2, r1, #4
 8000568:	0040      	lsls	r0, r0, #1
 800056a:	9200      	str	r2, [sp, #0]
 800056c:	4203      	tst	r3, r0
 800056e:	d105      	bne.n	800057c <_malloc_r+0x10c>
 8000570:	9a00      	ldr	r2, [sp, #0]
 8000572:	0040      	lsls	r0, r0, #1
 8000574:	3204      	adds	r2, #4
 8000576:	9200      	str	r2, [sp, #0]
 8000578:	4203      	tst	r3, r0
 800057a:	d0f9      	beq.n	8000570 <_malloc_r+0x100>
 800057c:	2303      	movs	r3, #3
 800057e:	4698      	mov	r8, r3
 8000580:	9a00      	ldr	r2, [sp, #0]
 8000582:	00d3      	lsls	r3, r2, #3
 8000584:	4699      	mov	r9, r3
 8000586:	44b1      	add	r9, r6
 8000588:	46cc      	mov	ip, r9
 800058a:	4692      	mov	sl, r2
 800058c:	4663      	mov	r3, ip
 800058e:	68dc      	ldr	r4, [r3, #12]
 8000590:	45a4      	cmp	ip, r4
 8000592:	d107      	bne.n	80005a4 <_malloc_r+0x134>
 8000594:	e14f      	b.n	8000836 <_malloc_r+0x3c6>
 8000596:	2a00      	cmp	r2, #0
 8000598:	db00      	blt.n	800059c <_malloc_r+0x12c>
 800059a:	e15f      	b.n	800085c <_malloc_r+0x3ec>
 800059c:	68e4      	ldr	r4, [r4, #12]
 800059e:	45a4      	cmp	ip, r4
 80005a0:	d100      	bne.n	80005a4 <_malloc_r+0x134>
 80005a2:	e148      	b.n	8000836 <_malloc_r+0x3c6>
 80005a4:	4642      	mov	r2, r8
 80005a6:	6863      	ldr	r3, [r4, #4]
 80005a8:	4393      	bics	r3, r2
 80005aa:	1b5a      	subs	r2, r3, r5
 80005ac:	2a0f      	cmp	r2, #15
 80005ae:	ddf2      	ble.n	8000596 <_malloc_r+0x126>
 80005b0:	2101      	movs	r1, #1
 80005b2:	1963      	adds	r3, r4, r5
 80005b4:	430d      	orrs	r5, r1
 80005b6:	6065      	str	r5, [r4, #4]
 80005b8:	68e0      	ldr	r0, [r4, #12]
 80005ba:	68a5      	ldr	r5, [r4, #8]
 80005bc:	3608      	adds	r6, #8
 80005be:	60e8      	str	r0, [r5, #12]
 80005c0:	4311      	orrs	r1, r2
 80005c2:	6085      	str	r5, [r0, #8]
 80005c4:	60f3      	str	r3, [r6, #12]
 80005c6:	60b3      	str	r3, [r6, #8]
 80005c8:	0038      	movs	r0, r7
 80005ca:	60de      	str	r6, [r3, #12]
 80005cc:	609e      	str	r6, [r3, #8]
 80005ce:	6059      	str	r1, [r3, #4]
 80005d0:	509a      	str	r2, [r3, r2]
 80005d2:	f000 f9f9 	bl	80009c8 <__malloc_unlock>
 80005d6:	0020      	movs	r0, r4
 80005d8:	3008      	adds	r0, #8
 80005da:	e022      	b.n	8000622 <_malloc_r+0x1b2>
 80005dc:	2910      	cmp	r1, #16
 80005de:	d827      	bhi.n	8000630 <_malloc_r+0x1c0>
 80005e0:	0038      	movs	r0, r7
 80005e2:	f000 f9ef 	bl	80009c4 <__malloc_lock>
 80005e6:	2510      	movs	r5, #16
 80005e8:	2306      	movs	r3, #6
 80005ea:	2102      	movs	r1, #2
 80005ec:	4e7f      	ldr	r6, [pc, #508]	; (80007ec <_malloc_r+0x37c>)
 80005ee:	009b      	lsls	r3, r3, #2
 80005f0:	18f3      	adds	r3, r6, r3
 80005f2:	001a      	movs	r2, r3
 80005f4:	685c      	ldr	r4, [r3, #4]
 80005f6:	3a08      	subs	r2, #8
 80005f8:	4294      	cmp	r4, r2
 80005fa:	d100      	bne.n	80005fe <_malloc_r+0x18e>
 80005fc:	e127      	b.n	800084e <_malloc_r+0x3de>
 80005fe:	2303      	movs	r3, #3
 8000600:	6862      	ldr	r2, [r4, #4]
 8000602:	439a      	bics	r2, r3
 8000604:	0013      	movs	r3, r2
 8000606:	68e2      	ldr	r2, [r4, #12]
 8000608:	68a1      	ldr	r1, [r4, #8]
 800060a:	60ca      	str	r2, [r1, #12]
 800060c:	6091      	str	r1, [r2, #8]
 800060e:	2201      	movs	r2, #1
 8000610:	18e3      	adds	r3, r4, r3
 8000612:	6859      	ldr	r1, [r3, #4]
 8000614:	0038      	movs	r0, r7
 8000616:	430a      	orrs	r2, r1
 8000618:	605a      	str	r2, [r3, #4]
 800061a:	f000 f9d5 	bl	80009c8 <__malloc_unlock>
 800061e:	0020      	movs	r0, r4
 8000620:	3008      	adds	r0, #8
 8000622:	b003      	add	sp, #12
 8000624:	bc3c      	pop	{r2, r3, r4, r5}
 8000626:	4690      	mov	r8, r2
 8000628:	4699      	mov	r9, r3
 800062a:	46a2      	mov	sl, r4
 800062c:	46ab      	mov	fp, r5
 800062e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000630:	230c      	movs	r3, #12
 8000632:	2000      	movs	r0, #0
 8000634:	603b      	str	r3, [r7, #0]
 8000636:	e7f4      	b.n	8000622 <_malloc_r+0x1b2>
 8000638:	2340      	movs	r3, #64	; 0x40
 800063a:	4698      	mov	r8, r3
 800063c:	3b01      	subs	r3, #1
 800063e:	2180      	movs	r1, #128	; 0x80
 8000640:	469c      	mov	ip, r3
 8000642:	e73f      	b.n	80004c4 <_malloc_r+0x54>
 8000644:	4663      	mov	r3, ip
 8000646:	9300      	str	r3, [sp, #0]
 8000648:	e75d      	b.n	8000506 <_malloc_r+0x96>
 800064a:	2303      	movs	r3, #3
 800064c:	68b4      	ldr	r4, [r6, #8]
 800064e:	6862      	ldr	r2, [r4, #4]
 8000650:	439a      	bics	r2, r3
 8000652:	4690      	mov	r8, r2
 8000654:	42aa      	cmp	r2, r5
 8000656:	d303      	bcc.n	8000660 <_malloc_r+0x1f0>
 8000658:	1b52      	subs	r2, r2, r5
 800065a:	2a0f      	cmp	r2, #15
 800065c:	dd00      	ble.n	8000660 <_malloc_r+0x1f0>
 800065e:	e087      	b.n	8000770 <_malloc_r+0x300>
 8000660:	0023      	movs	r3, r4
 8000662:	4443      	add	r3, r8
 8000664:	4a63      	ldr	r2, [pc, #396]	; (80007f4 <_malloc_r+0x384>)
 8000666:	9301      	str	r3, [sp, #4]
 8000668:	4b63      	ldr	r3, [pc, #396]	; (80007f8 <_malloc_r+0x388>)
 800066a:	4693      	mov	fp, r2
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	6812      	ldr	r2, [r2, #0]
 8000670:	18eb      	adds	r3, r5, r3
 8000672:	3201      	adds	r2, #1
 8000674:	d100      	bne.n	8000678 <_malloc_r+0x208>
 8000676:	e157      	b.n	8000928 <_malloc_r+0x4b8>
 8000678:	4a60      	ldr	r2, [pc, #384]	; (80007fc <_malloc_r+0x38c>)
 800067a:	4694      	mov	ip, r2
 800067c:	4463      	add	r3, ip
 800067e:	0b1b      	lsrs	r3, r3, #12
 8000680:	031b      	lsls	r3, r3, #12
 8000682:	9300      	str	r3, [sp, #0]
 8000684:	9900      	ldr	r1, [sp, #0]
 8000686:	0038      	movs	r0, r7
 8000688:	f000 f9a0 	bl	80009cc <_sbrk_r>
 800068c:	0003      	movs	r3, r0
 800068e:	4681      	mov	r9, r0
 8000690:	3301      	adds	r3, #1
 8000692:	d061      	beq.n	8000758 <_malloc_r+0x2e8>
 8000694:	9b01      	ldr	r3, [sp, #4]
 8000696:	4283      	cmp	r3, r0
 8000698:	d900      	bls.n	800069c <_malloc_r+0x22c>
 800069a:	e0fd      	b.n	8000898 <_malloc_r+0x428>
 800069c:	4b58      	ldr	r3, [pc, #352]	; (8000800 <_malloc_r+0x390>)
 800069e:	9a00      	ldr	r2, [sp, #0]
 80006a0:	469a      	mov	sl, r3
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	469c      	mov	ip, r3
 80006a6:	4653      	mov	r3, sl
 80006a8:	4462      	add	r2, ip
 80006aa:	601a      	str	r2, [r3, #0]
 80006ac:	9b01      	ldr	r3, [sp, #4]
 80006ae:	0011      	movs	r1, r2
 80006b0:	454b      	cmp	r3, r9
 80006b2:	d100      	bne.n	80006b6 <_malloc_r+0x246>
 80006b4:	e143      	b.n	800093e <_malloc_r+0x4ce>
 80006b6:	465b      	mov	r3, fp
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	3301      	adds	r3, #1
 80006bc:	d100      	bne.n	80006c0 <_malloc_r+0x250>
 80006be:	e14f      	b.n	8000960 <_malloc_r+0x4f0>
 80006c0:	464b      	mov	r3, r9
 80006c2:	9a01      	ldr	r2, [sp, #4]
 80006c4:	1a9b      	subs	r3, r3, r2
 80006c6:	1859      	adds	r1, r3, r1
 80006c8:	4653      	mov	r3, sl
 80006ca:	6019      	str	r1, [r3, #0]
 80006cc:	2307      	movs	r3, #7
 80006ce:	464a      	mov	r2, r9
 80006d0:	4013      	ands	r3, r2
 80006d2:	d100      	bne.n	80006d6 <_malloc_r+0x266>
 80006d4:	e117      	b.n	8000906 <_malloc_r+0x496>
 80006d6:	2108      	movs	r1, #8
 80006d8:	4689      	mov	r9, r1
 80006da:	494a      	ldr	r1, [pc, #296]	; (8000804 <_malloc_r+0x394>)
 80006dc:	1ad2      	subs	r2, r2, r3
 80006de:	4491      	add	r9, r2
 80006e0:	1ac9      	subs	r1, r1, r3
 80006e2:	9b00      	ldr	r3, [sp, #0]
 80006e4:	0038      	movs	r0, r7
 80006e6:	444b      	add	r3, r9
 80006e8:	051b      	lsls	r3, r3, #20
 80006ea:	0d1b      	lsrs	r3, r3, #20
 80006ec:	1acb      	subs	r3, r1, r3
 80006ee:	0019      	movs	r1, r3
 80006f0:	469b      	mov	fp, r3
 80006f2:	f000 f96b 	bl	80009cc <_sbrk_r>
 80006f6:	1c43      	adds	r3, r0, #1
 80006f8:	d100      	bne.n	80006fc <_malloc_r+0x28c>
 80006fa:	e135      	b.n	8000968 <_malloc_r+0x4f8>
 80006fc:	464b      	mov	r3, r9
 80006fe:	1ac0      	subs	r0, r0, r3
 8000700:	2301      	movs	r3, #1
 8000702:	4458      	add	r0, fp
 8000704:	4318      	orrs	r0, r3
 8000706:	4653      	mov	r3, sl
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	445b      	add	r3, fp
 800070c:	0019      	movs	r1, r3
 800070e:	4653      	mov	r3, sl
 8000710:	6019      	str	r1, [r3, #0]
 8000712:	464b      	mov	r3, r9
 8000714:	60b3      	str	r3, [r6, #8]
 8000716:	6058      	str	r0, [r3, #4]
 8000718:	42b4      	cmp	r4, r6
 800071a:	d013      	beq.n	8000744 <_malloc_r+0x2d4>
 800071c:	4643      	mov	r3, r8
 800071e:	2b0f      	cmp	r3, #15
 8000720:	d800      	bhi.n	8000724 <_malloc_r+0x2b4>
 8000722:	e0e1      	b.n	80008e8 <_malloc_r+0x478>
 8000724:	4643      	mov	r3, r8
 8000726:	2207      	movs	r2, #7
 8000728:	6860      	ldr	r0, [r4, #4]
 800072a:	3b0c      	subs	r3, #12
 800072c:	4393      	bics	r3, r2
 800072e:	3a06      	subs	r2, #6
 8000730:	4002      	ands	r2, r0
 8000732:	2005      	movs	r0, #5
 8000734:	431a      	orrs	r2, r3
 8000736:	6062      	str	r2, [r4, #4]
 8000738:	18e2      	adds	r2, r4, r3
 800073a:	6050      	str	r0, [r2, #4]
 800073c:	6090      	str	r0, [r2, #8]
 800073e:	2b0f      	cmp	r3, #15
 8000740:	d900      	bls.n	8000744 <_malloc_r+0x2d4>
 8000742:	e115      	b.n	8000970 <_malloc_r+0x500>
 8000744:	4b30      	ldr	r3, [pc, #192]	; (8000808 <_malloc_r+0x398>)
 8000746:	681a      	ldr	r2, [r3, #0]
 8000748:	4291      	cmp	r1, r2
 800074a:	d900      	bls.n	800074e <_malloc_r+0x2de>
 800074c:	6019      	str	r1, [r3, #0]
 800074e:	4b2f      	ldr	r3, [pc, #188]	; (800080c <_malloc_r+0x39c>)
 8000750:	681a      	ldr	r2, [r3, #0]
 8000752:	4291      	cmp	r1, r2
 8000754:	d900      	bls.n	8000758 <_malloc_r+0x2e8>
 8000756:	6019      	str	r1, [r3, #0]
 8000758:	2303      	movs	r3, #3
 800075a:	68b4      	ldr	r4, [r6, #8]
 800075c:	6862      	ldr	r2, [r4, #4]
 800075e:	439a      	bics	r2, r3
 8000760:	0013      	movs	r3, r2
 8000762:	1b52      	subs	r2, r2, r5
 8000764:	429d      	cmp	r5, r3
 8000766:	d900      	bls.n	800076a <_malloc_r+0x2fa>
 8000768:	e0c1      	b.n	80008ee <_malloc_r+0x47e>
 800076a:	2a0f      	cmp	r2, #15
 800076c:	dc00      	bgt.n	8000770 <_malloc_r+0x300>
 800076e:	e0be      	b.n	80008ee <_malloc_r+0x47e>
 8000770:	2301      	movs	r3, #1
 8000772:	0029      	movs	r1, r5
 8000774:	1965      	adds	r5, r4, r5
 8000776:	4319      	orrs	r1, r3
 8000778:	4313      	orrs	r3, r2
 800077a:	6061      	str	r1, [r4, #4]
 800077c:	0038      	movs	r0, r7
 800077e:	60b5      	str	r5, [r6, #8]
 8000780:	606b      	str	r3, [r5, #4]
 8000782:	f000 f921 	bl	80009c8 <__malloc_unlock>
 8000786:	0020      	movs	r0, r4
 8000788:	3008      	adds	r0, #8
 800078a:	e74a      	b.n	8000622 <_malloc_r+0x1b2>
 800078c:	2b14      	cmp	r3, #20
 800078e:	d974      	bls.n	800087a <_malloc_r+0x40a>
 8000790:	2b54      	cmp	r3, #84	; 0x54
 8000792:	d900      	bls.n	8000796 <_malloc_r+0x326>
 8000794:	e0b0      	b.n	80008f8 <_malloc_r+0x488>
 8000796:	0b29      	lsrs	r1, r5, #12
 8000798:	236e      	movs	r3, #110	; 0x6e
 800079a:	e68c      	b.n	80004b6 <_malloc_r+0x46>
 800079c:	0a4a      	lsrs	r2, r1, #9
 800079e:	2a04      	cmp	r2, #4
 80007a0:	d974      	bls.n	800088c <_malloc_r+0x41c>
 80007a2:	2a14      	cmp	r2, #20
 80007a4:	d900      	bls.n	80007a8 <_malloc_r+0x338>
 80007a6:	e0c2      	b.n	800092e <_malloc_r+0x4be>
 80007a8:	0010      	movs	r0, r2
 80007aa:	325c      	adds	r2, #92	; 0x5c
 80007ac:	305b      	adds	r0, #91	; 0x5b
 80007ae:	0052      	lsls	r2, r2, #1
 80007b0:	2108      	movs	r1, #8
 80007b2:	4249      	negs	r1, r1
 80007b4:	468c      	mov	ip, r1
 80007b6:	0092      	lsls	r2, r2, #2
 80007b8:	18b2      	adds	r2, r6, r2
 80007ba:	4494      	add	ip, r2
 80007bc:	4662      	mov	r2, ip
 80007be:	6892      	ldr	r2, [r2, #8]
 80007c0:	310b      	adds	r1, #11
 80007c2:	4688      	mov	r8, r1
 80007c4:	4594      	cmp	ip, r2
 80007c6:	d100      	bne.n	80007ca <_malloc_r+0x35a>
 80007c8:	e0a0      	b.n	800090c <_malloc_r+0x49c>
 80007ca:	4641      	mov	r1, r8
 80007cc:	6850      	ldr	r0, [r2, #4]
 80007ce:	4388      	bics	r0, r1
 80007d0:	4283      	cmp	r3, r0
 80007d2:	d202      	bcs.n	80007da <_malloc_r+0x36a>
 80007d4:	6892      	ldr	r2, [r2, #8]
 80007d6:	4594      	cmp	ip, r2
 80007d8:	d1f7      	bne.n	80007ca <_malloc_r+0x35a>
 80007da:	68d3      	ldr	r3, [r2, #12]
 80007dc:	469c      	mov	ip, r3
 80007de:	6873      	ldr	r3, [r6, #4]
 80007e0:	4661      	mov	r1, ip
 80007e2:	60a2      	str	r2, [r4, #8]
 80007e4:	60e1      	str	r1, [r4, #12]
 80007e6:	608c      	str	r4, [r1, #8]
 80007e8:	60d4      	str	r4, [r2, #12]
 80007ea:	e6b1      	b.n	8000550 <_malloc_r+0xe0>
 80007ec:	2000030c 	.word	0x2000030c
 80007f0:	000001ff 	.word	0x000001ff
 80007f4:	20000718 	.word	0x20000718
 80007f8:	20000b58 	.word	0x20000b58
 80007fc:	0000100f 	.word	0x0000100f
 8000800:	20000b5c 	.word	0x20000b5c
 8000804:	00001008 	.word	0x00001008
 8000808:	20000b54 	.word	0x20000b54
 800080c:	20000b50 	.word	0x20000b50
 8000810:	2101      	movs	r1, #1
 8000812:	1963      	adds	r3, r4, r5
 8000814:	430d      	orrs	r5, r1
 8000816:	4301      	orrs	r1, r0
 8000818:	6065      	str	r5, [r4, #4]
 800081a:	6173      	str	r3, [r6, #20]
 800081c:	6133      	str	r3, [r6, #16]
 800081e:	60da      	str	r2, [r3, #12]
 8000820:	609a      	str	r2, [r3, #8]
 8000822:	6059      	str	r1, [r3, #4]
 8000824:	5018      	str	r0, [r3, r0]
 8000826:	0038      	movs	r0, r7
 8000828:	f000 f8ce 	bl	80009c8 <__malloc_unlock>
 800082c:	0020      	movs	r0, r4
 800082e:	3008      	adds	r0, #8
 8000830:	e6f7      	b.n	8000622 <_malloc_r+0x1b2>
 8000832:	6873      	ldr	r3, [r6, #4]
 8000834:	e68c      	b.n	8000550 <_malloc_r+0xe0>
 8000836:	2308      	movs	r3, #8
 8000838:	469b      	mov	fp, r3
 800083a:	3b07      	subs	r3, #7
 800083c:	44dc      	add	ip, fp
 800083e:	469b      	mov	fp, r3
 8000840:	44da      	add	sl, fp
 8000842:	4643      	mov	r3, r8
 8000844:	4652      	mov	r2, sl
 8000846:	4213      	tst	r3, r2
 8000848:	d000      	beq.n	800084c <_malloc_r+0x3dc>
 800084a:	e69f      	b.n	800058c <_malloc_r+0x11c>
 800084c:	e033      	b.n	80008b6 <_malloc_r+0x446>
 800084e:	68dc      	ldr	r4, [r3, #12]
 8000850:	1c8a      	adds	r2, r1, #2
 8000852:	9200      	str	r2, [sp, #0]
 8000854:	42a3      	cmp	r3, r4
 8000856:	d100      	bne.n	800085a <_malloc_r+0x3ea>
 8000858:	e655      	b.n	8000506 <_malloc_r+0x96>
 800085a:	e6d0      	b.n	80005fe <_malloc_r+0x18e>
 800085c:	2201      	movs	r2, #1
 800085e:	18e3      	adds	r3, r4, r3
 8000860:	6859      	ldr	r1, [r3, #4]
 8000862:	0038      	movs	r0, r7
 8000864:	430a      	orrs	r2, r1
 8000866:	605a      	str	r2, [r3, #4]
 8000868:	68e3      	ldr	r3, [r4, #12]
 800086a:	68a2      	ldr	r2, [r4, #8]
 800086c:	60d3      	str	r3, [r2, #12]
 800086e:	609a      	str	r2, [r3, #8]
 8000870:	f000 f8aa 	bl	80009c8 <__malloc_unlock>
 8000874:	0020      	movs	r0, r4
 8000876:	3008      	adds	r0, #8
 8000878:	e6d3      	b.n	8000622 <_malloc_r+0x1b2>
 800087a:	225b      	movs	r2, #91	; 0x5b
 800087c:	4694      	mov	ip, r2
 800087e:	3201      	adds	r2, #1
 8000880:	4690      	mov	r8, r2
 8000882:	4498      	add	r8, r3
 8000884:	449c      	add	ip, r3
 8000886:	4643      	mov	r3, r8
 8000888:	0059      	lsls	r1, r3, #1
 800088a:	e61b      	b.n	80004c4 <_malloc_r+0x54>
 800088c:	098a      	lsrs	r2, r1, #6
 800088e:	0010      	movs	r0, r2
 8000890:	3239      	adds	r2, #57	; 0x39
 8000892:	3038      	adds	r0, #56	; 0x38
 8000894:	0052      	lsls	r2, r2, #1
 8000896:	e78b      	b.n	80007b0 <_malloc_r+0x340>
 8000898:	42b4      	cmp	r4, r6
 800089a:	d000      	beq.n	800089e <_malloc_r+0x42e>
 800089c:	e75c      	b.n	8000758 <_malloc_r+0x2e8>
 800089e:	e6fd      	b.n	800069c <_malloc_r+0x22c>
 80008a0:	9b00      	ldr	r3, [sp, #0]
 80008a2:	3b01      	subs	r3, #1
 80008a4:	9300      	str	r3, [sp, #0]
 80008a6:	2308      	movs	r3, #8
 80008a8:	425b      	negs	r3, r3
 80008aa:	469c      	mov	ip, r3
 80008ac:	44e1      	add	r9, ip
 80008ae:	464b      	mov	r3, r9
 80008b0:	689b      	ldr	r3, [r3, #8]
 80008b2:	4599      	cmp	r9, r3
 80008b4:	d17a      	bne.n	80009ac <_malloc_r+0x53c>
 80008b6:	4643      	mov	r3, r8
 80008b8:	9a00      	ldr	r2, [sp, #0]
 80008ba:	4213      	tst	r3, r2
 80008bc:	d1f0      	bne.n	80008a0 <_malloc_r+0x430>
 80008be:	6873      	ldr	r3, [r6, #4]
 80008c0:	4383      	bics	r3, r0
 80008c2:	6073      	str	r3, [r6, #4]
 80008c4:	0040      	lsls	r0, r0, #1
 80008c6:	4298      	cmp	r0, r3
 80008c8:	d900      	bls.n	80008cc <_malloc_r+0x45c>
 80008ca:	e6be      	b.n	800064a <_malloc_r+0x1da>
 80008cc:	2800      	cmp	r0, #0
 80008ce:	d100      	bne.n	80008d2 <_malloc_r+0x462>
 80008d0:	e6bb      	b.n	800064a <_malloc_r+0x1da>
 80008d2:	4203      	tst	r3, r0
 80008d4:	d170      	bne.n	80009b8 <_malloc_r+0x548>
 80008d6:	4652      	mov	r2, sl
 80008d8:	9200      	str	r2, [sp, #0]
 80008da:	9a00      	ldr	r2, [sp, #0]
 80008dc:	0040      	lsls	r0, r0, #1
 80008de:	3204      	adds	r2, #4
 80008e0:	9200      	str	r2, [sp, #0]
 80008e2:	4203      	tst	r3, r0
 80008e4:	d0f9      	beq.n	80008da <_malloc_r+0x46a>
 80008e6:	e64b      	b.n	8000580 <_malloc_r+0x110>
 80008e8:	2301      	movs	r3, #1
 80008ea:	464a      	mov	r2, r9
 80008ec:	6053      	str	r3, [r2, #4]
 80008ee:	0038      	movs	r0, r7
 80008f0:	f000 f86a 	bl	80009c8 <__malloc_unlock>
 80008f4:	2000      	movs	r0, #0
 80008f6:	e694      	b.n	8000622 <_malloc_r+0x1b2>
 80008f8:	22aa      	movs	r2, #170	; 0xaa
 80008fa:	0052      	lsls	r2, r2, #1
 80008fc:	4293      	cmp	r3, r2
 80008fe:	d80d      	bhi.n	800091c <_malloc_r+0x4ac>
 8000900:	0be9      	lsrs	r1, r5, #15
 8000902:	2377      	movs	r3, #119	; 0x77
 8000904:	e5d7      	b.n	80004b6 <_malloc_r+0x46>
 8000906:	2180      	movs	r1, #128	; 0x80
 8000908:	0149      	lsls	r1, r1, #5
 800090a:	e6ea      	b.n	80006e2 <_malloc_r+0x272>
 800090c:	2301      	movs	r3, #1
 800090e:	1080      	asrs	r0, r0, #2
 8000910:	4083      	lsls	r3, r0
 8000912:	6872      	ldr	r2, [r6, #4]
 8000914:	4313      	orrs	r3, r2
 8000916:	6073      	str	r3, [r6, #4]
 8000918:	4662      	mov	r2, ip
 800091a:	e761      	b.n	80007e0 <_malloc_r+0x370>
 800091c:	4a28      	ldr	r2, [pc, #160]	; (80009c0 <_malloc_r+0x550>)
 800091e:	4293      	cmp	r3, r2
 8000920:	d818      	bhi.n	8000954 <_malloc_r+0x4e4>
 8000922:	0ca9      	lsrs	r1, r5, #18
 8000924:	237c      	movs	r3, #124	; 0x7c
 8000926:	e5c6      	b.n	80004b6 <_malloc_r+0x46>
 8000928:	3310      	adds	r3, #16
 800092a:	9300      	str	r3, [sp, #0]
 800092c:	e6aa      	b.n	8000684 <_malloc_r+0x214>
 800092e:	2a54      	cmp	r2, #84	; 0x54
 8000930:	d826      	bhi.n	8000980 <_malloc_r+0x510>
 8000932:	0b0a      	lsrs	r2, r1, #12
 8000934:	0010      	movs	r0, r2
 8000936:	326f      	adds	r2, #111	; 0x6f
 8000938:	306e      	adds	r0, #110	; 0x6e
 800093a:	0052      	lsls	r2, r2, #1
 800093c:	e738      	b.n	80007b0 <_malloc_r+0x340>
 800093e:	051b      	lsls	r3, r3, #20
 8000940:	d000      	beq.n	8000944 <_malloc_r+0x4d4>
 8000942:	e6b8      	b.n	80006b6 <_malloc_r+0x246>
 8000944:	9b00      	ldr	r3, [sp, #0]
 8000946:	68b2      	ldr	r2, [r6, #8]
 8000948:	4443      	add	r3, r8
 800094a:	0018      	movs	r0, r3
 800094c:	2301      	movs	r3, #1
 800094e:	4303      	orrs	r3, r0
 8000950:	6053      	str	r3, [r2, #4]
 8000952:	e6f7      	b.n	8000744 <_malloc_r+0x2d4>
 8000954:	237f      	movs	r3, #127	; 0x7f
 8000956:	4698      	mov	r8, r3
 8000958:	3b01      	subs	r3, #1
 800095a:	21fe      	movs	r1, #254	; 0xfe
 800095c:	469c      	mov	ip, r3
 800095e:	e5b1      	b.n	80004c4 <_malloc_r+0x54>
 8000960:	465b      	mov	r3, fp
 8000962:	464a      	mov	r2, r9
 8000964:	601a      	str	r2, [r3, #0]
 8000966:	e6b1      	b.n	80006cc <_malloc_r+0x25c>
 8000968:	2300      	movs	r3, #0
 800096a:	2001      	movs	r0, #1
 800096c:	469b      	mov	fp, r3
 800096e:	e6ca      	b.n	8000706 <_malloc_r+0x296>
 8000970:	0021      	movs	r1, r4
 8000972:	0038      	movs	r0, r7
 8000974:	3108      	adds	r1, #8
 8000976:	f000 f88b 	bl	8000a90 <_free_r>
 800097a:	4653      	mov	r3, sl
 800097c:	6819      	ldr	r1, [r3, #0]
 800097e:	e6e1      	b.n	8000744 <_malloc_r+0x2d4>
 8000980:	20aa      	movs	r0, #170	; 0xaa
 8000982:	0040      	lsls	r0, r0, #1
 8000984:	4282      	cmp	r2, r0
 8000986:	d805      	bhi.n	8000994 <_malloc_r+0x524>
 8000988:	0bca      	lsrs	r2, r1, #15
 800098a:	0010      	movs	r0, r2
 800098c:	3278      	adds	r2, #120	; 0x78
 800098e:	3077      	adds	r0, #119	; 0x77
 8000990:	0052      	lsls	r2, r2, #1
 8000992:	e70d      	b.n	80007b0 <_malloc_r+0x340>
 8000994:	480a      	ldr	r0, [pc, #40]	; (80009c0 <_malloc_r+0x550>)
 8000996:	4282      	cmp	r2, r0
 8000998:	d805      	bhi.n	80009a6 <_malloc_r+0x536>
 800099a:	0c8a      	lsrs	r2, r1, #18
 800099c:	0010      	movs	r0, r2
 800099e:	327d      	adds	r2, #125	; 0x7d
 80009a0:	307c      	adds	r0, #124	; 0x7c
 80009a2:	0052      	lsls	r2, r2, #1
 80009a4:	e704      	b.n	80007b0 <_malloc_r+0x340>
 80009a6:	22fe      	movs	r2, #254	; 0xfe
 80009a8:	207e      	movs	r0, #126	; 0x7e
 80009aa:	e701      	b.n	80007b0 <_malloc_r+0x340>
 80009ac:	6873      	ldr	r3, [r6, #4]
 80009ae:	e789      	b.n	80008c4 <_malloc_r+0x454>
 80009b0:	08e9      	lsrs	r1, r5, #3
 80009b2:	1c4b      	adds	r3, r1, #1
 80009b4:	005b      	lsls	r3, r3, #1
 80009b6:	e619      	b.n	80005ec <_malloc_r+0x17c>
 80009b8:	4653      	mov	r3, sl
 80009ba:	9300      	str	r3, [sp, #0]
 80009bc:	e5e0      	b.n	8000580 <_malloc_r+0x110>
 80009be:	46c0      	nop			; (mov r8, r8)
 80009c0:	00000554 	.word	0x00000554

080009c4 <__malloc_lock>:
 80009c4:	4770      	bx	lr
 80009c6:	46c0      	nop			; (mov r8, r8)

080009c8 <__malloc_unlock>:
 80009c8:	4770      	bx	lr
 80009ca:	46c0      	nop			; (mov r8, r8)

080009cc <_sbrk_r>:
 80009cc:	2300      	movs	r3, #0
 80009ce:	b570      	push	{r4, r5, r6, lr}
 80009d0:	4c06      	ldr	r4, [pc, #24]	; (80009ec <_sbrk_r+0x20>)
 80009d2:	0005      	movs	r5, r0
 80009d4:	0008      	movs	r0, r1
 80009d6:	6023      	str	r3, [r4, #0]
 80009d8:	f000 f93c 	bl	8000c54 <_sbrk>
 80009dc:	1c43      	adds	r3, r0, #1
 80009de:	d000      	beq.n	80009e2 <_sbrk_r+0x16>
 80009e0:	bd70      	pop	{r4, r5, r6, pc}
 80009e2:	6823      	ldr	r3, [r4, #0]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d0fb      	beq.n	80009e0 <_sbrk_r+0x14>
 80009e8:	602b      	str	r3, [r5, #0]
 80009ea:	e7f9      	b.n	80009e0 <_sbrk_r+0x14>
 80009ec:	20000b88 	.word	0x20000b88

080009f0 <_malloc_trim_r>:
 80009f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009f2:	000c      	movs	r4, r1
 80009f4:	0006      	movs	r6, r0
 80009f6:	f7ff ffe5 	bl	80009c4 <__malloc_lock>
 80009fa:	4f20      	ldr	r7, [pc, #128]	; (8000a7c <_malloc_trim_r+0x8c>)
 80009fc:	68bb      	ldr	r3, [r7, #8]
 80009fe:	685d      	ldr	r5, [r3, #4]
 8000a00:	2303      	movs	r3, #3
 8000a02:	439d      	bics	r5, r3
 8000a04:	4b1e      	ldr	r3, [pc, #120]	; (8000a80 <_malloc_trim_r+0x90>)
 8000a06:	1b2c      	subs	r4, r5, r4
 8000a08:	469c      	mov	ip, r3
 8000a0a:	4464      	add	r4, ip
 8000a0c:	0b24      	lsrs	r4, r4, #12
 8000a0e:	4b1d      	ldr	r3, [pc, #116]	; (8000a84 <_malloc_trim_r+0x94>)
 8000a10:	3c01      	subs	r4, #1
 8000a12:	0324      	lsls	r4, r4, #12
 8000a14:	429c      	cmp	r4, r3
 8000a16:	dd07      	ble.n	8000a28 <_malloc_trim_r+0x38>
 8000a18:	2100      	movs	r1, #0
 8000a1a:	0030      	movs	r0, r6
 8000a1c:	f7ff ffd6 	bl	80009cc <_sbrk_r>
 8000a20:	68bb      	ldr	r3, [r7, #8]
 8000a22:	195b      	adds	r3, r3, r5
 8000a24:	4298      	cmp	r0, r3
 8000a26:	d004      	beq.n	8000a32 <_malloc_trim_r+0x42>
 8000a28:	0030      	movs	r0, r6
 8000a2a:	f7ff ffcd 	bl	80009c8 <__malloc_unlock>
 8000a2e:	2000      	movs	r0, #0
 8000a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a32:	4261      	negs	r1, r4
 8000a34:	0030      	movs	r0, r6
 8000a36:	f7ff ffc9 	bl	80009cc <_sbrk_r>
 8000a3a:	1c43      	adds	r3, r0, #1
 8000a3c:	d00d      	beq.n	8000a5a <_malloc_trim_r+0x6a>
 8000a3e:	2301      	movs	r3, #1
 8000a40:	1b2d      	subs	r5, r5, r4
 8000a42:	68ba      	ldr	r2, [r7, #8]
 8000a44:	431d      	orrs	r5, r3
 8000a46:	4b10      	ldr	r3, [pc, #64]	; (8000a88 <_malloc_trim_r+0x98>)
 8000a48:	6055      	str	r5, [r2, #4]
 8000a4a:	681a      	ldr	r2, [r3, #0]
 8000a4c:	0030      	movs	r0, r6
 8000a4e:	1b14      	subs	r4, r2, r4
 8000a50:	601c      	str	r4, [r3, #0]
 8000a52:	f7ff ffb9 	bl	80009c8 <__malloc_unlock>
 8000a56:	2001      	movs	r0, #1
 8000a58:	e7ea      	b.n	8000a30 <_malloc_trim_r+0x40>
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	0030      	movs	r0, r6
 8000a5e:	f7ff ffb5 	bl	80009cc <_sbrk_r>
 8000a62:	68bb      	ldr	r3, [r7, #8]
 8000a64:	1ac2      	subs	r2, r0, r3
 8000a66:	2a0f      	cmp	r2, #15
 8000a68:	ddde      	ble.n	8000a28 <_malloc_trim_r+0x38>
 8000a6a:	4908      	ldr	r1, [pc, #32]	; (8000a8c <_malloc_trim_r+0x9c>)
 8000a6c:	6809      	ldr	r1, [r1, #0]
 8000a6e:	1a40      	subs	r0, r0, r1
 8000a70:	4905      	ldr	r1, [pc, #20]	; (8000a88 <_malloc_trim_r+0x98>)
 8000a72:	6008      	str	r0, [r1, #0]
 8000a74:	2101      	movs	r1, #1
 8000a76:	430a      	orrs	r2, r1
 8000a78:	605a      	str	r2, [r3, #4]
 8000a7a:	e7d5      	b.n	8000a28 <_malloc_trim_r+0x38>
 8000a7c:	2000030c 	.word	0x2000030c
 8000a80:	00000fef 	.word	0x00000fef
 8000a84:	00000fff 	.word	0x00000fff
 8000a88:	20000b5c 	.word	0x20000b5c
 8000a8c:	20000718 	.word	0x20000718

08000a90 <_free_r>:
 8000a90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a92:	4647      	mov	r7, r8
 8000a94:	0005      	movs	r5, r0
 8000a96:	b480      	push	{r7}
 8000a98:	1e0c      	subs	r4, r1, #0
 8000a9a:	d03e      	beq.n	8000b1a <_free_r+0x8a>
 8000a9c:	f7ff ff92 	bl	80009c4 <__malloc_lock>
 8000aa0:	2301      	movs	r3, #1
 8000aa2:	0021      	movs	r1, r4
 8000aa4:	4698      	mov	r8, r3
 8000aa6:	3908      	subs	r1, #8
 8000aa8:	684e      	ldr	r6, [r1, #4]
 8000aaa:	4642      	mov	r2, r8
 8000aac:	0033      	movs	r3, r6
 8000aae:	2003      	movs	r0, #3
 8000ab0:	4393      	bics	r3, r2
 8000ab2:	18cc      	adds	r4, r1, r3
 8000ab4:	6862      	ldr	r2, [r4, #4]
 8000ab6:	4382      	bics	r2, r0
 8000ab8:	4860      	ldr	r0, [pc, #384]	; (8000c3c <_free_r+0x1ac>)
 8000aba:	6887      	ldr	r7, [r0, #8]
 8000abc:	42bc      	cmp	r4, r7
 8000abe:	d05a      	beq.n	8000b76 <_free_r+0xe6>
 8000ac0:	4647      	mov	r7, r8
 8000ac2:	6062      	str	r2, [r4, #4]
 8000ac4:	4237      	tst	r7, r6
 8000ac6:	d10b      	bne.n	8000ae0 <_free_r+0x50>
 8000ac8:	2708      	movs	r7, #8
 8000aca:	46bc      	mov	ip, r7
 8000acc:	680e      	ldr	r6, [r1, #0]
 8000ace:	4484      	add	ip, r0
 8000ad0:	1b89      	subs	r1, r1, r6
 8000ad2:	199b      	adds	r3, r3, r6
 8000ad4:	688e      	ldr	r6, [r1, #8]
 8000ad6:	4566      	cmp	r6, ip
 8000ad8:	d066      	beq.n	8000ba8 <_free_r+0x118>
 8000ada:	68cf      	ldr	r7, [r1, #12]
 8000adc:	60f7      	str	r7, [r6, #12]
 8000ade:	60be      	str	r6, [r7, #8]
 8000ae0:	2601      	movs	r6, #1
 8000ae2:	18a7      	adds	r7, r4, r2
 8000ae4:	687f      	ldr	r7, [r7, #4]
 8000ae6:	4237      	tst	r7, r6
 8000ae8:	d036      	beq.n	8000b58 <_free_r+0xc8>
 8000aea:	4a55      	ldr	r2, [pc, #340]	; (8000c40 <_free_r+0x1b0>)
 8000aec:	431e      	orrs	r6, r3
 8000aee:	604e      	str	r6, [r1, #4]
 8000af0:	50cb      	str	r3, [r1, r3]
 8000af2:	4293      	cmp	r3, r2
 8000af4:	d814      	bhi.n	8000b20 <_free_r+0x90>
 8000af6:	08db      	lsrs	r3, r3, #3
 8000af8:	3aff      	subs	r2, #255	; 0xff
 8000afa:	109c      	asrs	r4, r3, #2
 8000afc:	3aff      	subs	r2, #255	; 0xff
 8000afe:	40a2      	lsls	r2, r4
 8000b00:	6844      	ldr	r4, [r0, #4]
 8000b02:	00db      	lsls	r3, r3, #3
 8000b04:	4322      	orrs	r2, r4
 8000b06:	6042      	str	r2, [r0, #4]
 8000b08:	1818      	adds	r0, r3, r0
 8000b0a:	6883      	ldr	r3, [r0, #8]
 8000b0c:	60c8      	str	r0, [r1, #12]
 8000b0e:	608b      	str	r3, [r1, #8]
 8000b10:	6081      	str	r1, [r0, #8]
 8000b12:	60d9      	str	r1, [r3, #12]
 8000b14:	0028      	movs	r0, r5
 8000b16:	f7ff ff57 	bl	80009c8 <__malloc_unlock>
 8000b1a:	bc04      	pop	{r2}
 8000b1c:	4690      	mov	r8, r2
 8000b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b20:	0a5a      	lsrs	r2, r3, #9
 8000b22:	2a04      	cmp	r2, #4
 8000b24:	d84f      	bhi.n	8000bc6 <_free_r+0x136>
 8000b26:	099c      	lsrs	r4, r3, #6
 8000b28:	0026      	movs	r6, r4
 8000b2a:	3439      	adds	r4, #57	; 0x39
 8000b2c:	3638      	adds	r6, #56	; 0x38
 8000b2e:	0064      	lsls	r4, r4, #1
 8000b30:	00a4      	lsls	r4, r4, #2
 8000b32:	1904      	adds	r4, r0, r4
 8000b34:	3c08      	subs	r4, #8
 8000b36:	68a2      	ldr	r2, [r4, #8]
 8000b38:	2703      	movs	r7, #3
 8000b3a:	4294      	cmp	r4, r2
 8000b3c:	d04a      	beq.n	8000bd4 <_free_r+0x144>
 8000b3e:	6850      	ldr	r0, [r2, #4]
 8000b40:	43b8      	bics	r0, r7
 8000b42:	4283      	cmp	r3, r0
 8000b44:	d202      	bcs.n	8000b4c <_free_r+0xbc>
 8000b46:	6892      	ldr	r2, [r2, #8]
 8000b48:	4294      	cmp	r4, r2
 8000b4a:	d1f8      	bne.n	8000b3e <_free_r+0xae>
 8000b4c:	68d4      	ldr	r4, [r2, #12]
 8000b4e:	60cc      	str	r4, [r1, #12]
 8000b50:	608a      	str	r2, [r1, #8]
 8000b52:	60a1      	str	r1, [r4, #8]
 8000b54:	60d1      	str	r1, [r2, #12]
 8000b56:	e7dd      	b.n	8000b14 <_free_r+0x84>
 8000b58:	189b      	adds	r3, r3, r2
 8000b5a:	4f3a      	ldr	r7, [pc, #232]	; (8000c44 <_free_r+0x1b4>)
 8000b5c:	68a2      	ldr	r2, [r4, #8]
 8000b5e:	42ba      	cmp	r2, r7
 8000b60:	d040      	beq.n	8000be4 <_free_r+0x154>
 8000b62:	68e4      	ldr	r4, [r4, #12]
 8000b64:	431e      	orrs	r6, r3
 8000b66:	60d4      	str	r4, [r2, #12]
 8000b68:	60a2      	str	r2, [r4, #8]
 8000b6a:	4a35      	ldr	r2, [pc, #212]	; (8000c40 <_free_r+0x1b0>)
 8000b6c:	604e      	str	r6, [r1, #4]
 8000b6e:	50cb      	str	r3, [r1, r3]
 8000b70:	4293      	cmp	r3, r2
 8000b72:	d8d5      	bhi.n	8000b20 <_free_r+0x90>
 8000b74:	e7bf      	b.n	8000af6 <_free_r+0x66>
 8000b76:	189b      	adds	r3, r3, r2
 8000b78:	4642      	mov	r2, r8
 8000b7a:	4232      	tst	r2, r6
 8000b7c:	d106      	bne.n	8000b8c <_free_r+0xfc>
 8000b7e:	680a      	ldr	r2, [r1, #0]
 8000b80:	1a89      	subs	r1, r1, r2
 8000b82:	688c      	ldr	r4, [r1, #8]
 8000b84:	189b      	adds	r3, r3, r2
 8000b86:	68ca      	ldr	r2, [r1, #12]
 8000b88:	60e2      	str	r2, [r4, #12]
 8000b8a:	6094      	str	r4, [r2, #8]
 8000b8c:	2401      	movs	r4, #1
 8000b8e:	4a2e      	ldr	r2, [pc, #184]	; (8000c48 <_free_r+0x1b8>)
 8000b90:	431c      	orrs	r4, r3
 8000b92:	6812      	ldr	r2, [r2, #0]
 8000b94:	604c      	str	r4, [r1, #4]
 8000b96:	6081      	str	r1, [r0, #8]
 8000b98:	4293      	cmp	r3, r2
 8000b9a:	d3bb      	bcc.n	8000b14 <_free_r+0x84>
 8000b9c:	4b2b      	ldr	r3, [pc, #172]	; (8000c4c <_free_r+0x1bc>)
 8000b9e:	0028      	movs	r0, r5
 8000ba0:	6819      	ldr	r1, [r3, #0]
 8000ba2:	f7ff ff25 	bl	80009f0 <_malloc_trim_r>
 8000ba6:	e7b5      	b.n	8000b14 <_free_r+0x84>
 8000ba8:	4646      	mov	r6, r8
 8000baa:	18a0      	adds	r0, r4, r2
 8000bac:	6840      	ldr	r0, [r0, #4]
 8000bae:	4230      	tst	r0, r6
 8000bb0:	d13e      	bne.n	8000c30 <_free_r+0x1a0>
 8000bb2:	68a0      	ldr	r0, [r4, #8]
 8000bb4:	18d3      	adds	r3, r2, r3
 8000bb6:	68e2      	ldr	r2, [r4, #12]
 8000bb8:	60c2      	str	r2, [r0, #12]
 8000bba:	6090      	str	r0, [r2, #8]
 8000bbc:	4642      	mov	r2, r8
 8000bbe:	431a      	orrs	r2, r3
 8000bc0:	604a      	str	r2, [r1, #4]
 8000bc2:	50cb      	str	r3, [r1, r3]
 8000bc4:	e7a6      	b.n	8000b14 <_free_r+0x84>
 8000bc6:	2a14      	cmp	r2, #20
 8000bc8:	d814      	bhi.n	8000bf4 <_free_r+0x164>
 8000bca:	0016      	movs	r6, r2
 8000bcc:	325c      	adds	r2, #92	; 0x5c
 8000bce:	365b      	adds	r6, #91	; 0x5b
 8000bd0:	0054      	lsls	r4, r2, #1
 8000bd2:	e7ad      	b.n	8000b30 <_free_r+0xa0>
 8000bd4:	2301      	movs	r3, #1
 8000bd6:	10b6      	asrs	r6, r6, #2
 8000bd8:	40b3      	lsls	r3, r6
 8000bda:	6842      	ldr	r2, [r0, #4]
 8000bdc:	4313      	orrs	r3, r2
 8000bde:	6043      	str	r3, [r0, #4]
 8000be0:	0022      	movs	r2, r4
 8000be2:	e7b4      	b.n	8000b4e <_free_r+0xbe>
 8000be4:	431e      	orrs	r6, r3
 8000be6:	60d1      	str	r1, [r2, #12]
 8000be8:	6091      	str	r1, [r2, #8]
 8000bea:	60ca      	str	r2, [r1, #12]
 8000bec:	608a      	str	r2, [r1, #8]
 8000bee:	604e      	str	r6, [r1, #4]
 8000bf0:	50cb      	str	r3, [r1, r3]
 8000bf2:	e78f      	b.n	8000b14 <_free_r+0x84>
 8000bf4:	2a54      	cmp	r2, #84	; 0x54
 8000bf6:	d805      	bhi.n	8000c04 <_free_r+0x174>
 8000bf8:	0b1c      	lsrs	r4, r3, #12
 8000bfa:	0026      	movs	r6, r4
 8000bfc:	346f      	adds	r4, #111	; 0x6f
 8000bfe:	366e      	adds	r6, #110	; 0x6e
 8000c00:	0064      	lsls	r4, r4, #1
 8000c02:	e795      	b.n	8000b30 <_free_r+0xa0>
 8000c04:	24aa      	movs	r4, #170	; 0xaa
 8000c06:	0064      	lsls	r4, r4, #1
 8000c08:	42a2      	cmp	r2, r4
 8000c0a:	d805      	bhi.n	8000c18 <_free_r+0x188>
 8000c0c:	0bdc      	lsrs	r4, r3, #15
 8000c0e:	0026      	movs	r6, r4
 8000c10:	3478      	adds	r4, #120	; 0x78
 8000c12:	3677      	adds	r6, #119	; 0x77
 8000c14:	0064      	lsls	r4, r4, #1
 8000c16:	e78b      	b.n	8000b30 <_free_r+0xa0>
 8000c18:	4c0d      	ldr	r4, [pc, #52]	; (8000c50 <_free_r+0x1c0>)
 8000c1a:	42a2      	cmp	r2, r4
 8000c1c:	d805      	bhi.n	8000c2a <_free_r+0x19a>
 8000c1e:	0c9c      	lsrs	r4, r3, #18
 8000c20:	0026      	movs	r6, r4
 8000c22:	347d      	adds	r4, #125	; 0x7d
 8000c24:	367c      	adds	r6, #124	; 0x7c
 8000c26:	0064      	lsls	r4, r4, #1
 8000c28:	e782      	b.n	8000b30 <_free_r+0xa0>
 8000c2a:	24fe      	movs	r4, #254	; 0xfe
 8000c2c:	267e      	movs	r6, #126	; 0x7e
 8000c2e:	e77f      	b.n	8000b30 <_free_r+0xa0>
 8000c30:	4642      	mov	r2, r8
 8000c32:	431a      	orrs	r2, r3
 8000c34:	604a      	str	r2, [r1, #4]
 8000c36:	50cb      	str	r3, [r1, r3]
 8000c38:	e76c      	b.n	8000b14 <_free_r+0x84>
 8000c3a:	46c0      	nop			; (mov r8, r8)
 8000c3c:	2000030c 	.word	0x2000030c
 8000c40:	000001ff 	.word	0x000001ff
 8000c44:	20000314 	.word	0x20000314
 8000c48:	20000714 	.word	0x20000714
 8000c4c:	20000b58 	.word	0x20000b58
 8000c50:	00000554 	.word	0x00000554

08000c54 <_sbrk>:
 8000c54:	4a04      	ldr	r2, [pc, #16]	; (8000c68 <_sbrk+0x14>)
 8000c56:	6813      	ldr	r3, [r2, #0]
 8000c58:	2b00      	cmp	r3, #0
 8000c5a:	d003      	beq.n	8000c64 <_sbrk+0x10>
 8000c5c:	1818      	adds	r0, r3, r0
 8000c5e:	6010      	str	r0, [r2, #0]
 8000c60:	0018      	movs	r0, r3
 8000c62:	4770      	bx	lr
 8000c64:	4b01      	ldr	r3, [pc, #4]	; (8000c6c <_sbrk+0x18>)
 8000c66:	e7f9      	b.n	8000c5c <_sbrk+0x8>
 8000c68:	20000b84 	.word	0x20000b84
 8000c6c:	20000b8c 	.word	0x20000b8c

08000c70 <fixedinput.6058>:
 8000c70:	eea339da 0d4b6b5e efbf5532 90186095     .9..^kK.2U...`..

08000c80 <fixedkey.6057>:
 8000c80:	67452301 efcdab89 78563412 f0debc9a     .#Eg.....4Vx....
 8000c90:	00000043                                C...
