ELMO needs both the ARM toolchain and the GCC compiler. We provide the instruction for Mac or Linux (Ubuntu): support for Windows is not provided yet.

1. GCC compiler collection:
GCC is only used when ELMO is installed into a new system or the user changes some ELMO defines in "elmodefines.h". In both cases, ELMO needs to be recompiled to generate a new executable program.

    ---Mac:  Download and install “Command Line Tools for Xcode”, which is available on Apple’s developer page. After installation is completed, run “gcc -v” in a terminal to see whether you can see the correct version information.
    ---Ubuntu: Type "sudo apt-get install gcc" in the command line to install gcc.

2. The GNU ARM Embedded Toolchain 
The GNU ARM Embedded toolchain is used for compiling the test examples from C to ARM binaries. Technically, this is *NOT* a step in ELMO, as ELMO starts from analyzing the binary representation. However, to run any user-defined test case, users need the ARM toolchain to compile their codes to binary codes (".bin" file). 

The GNU ARM Embedded Toolchain can be downloaded from https://developer.arm.com/open-source/gnu-toolchain/gnu-rm. According to ARM's install guide:

    ---Mac: Unpack the tarball to the install directory, like this "$ cd $install_dir && tar xjf gcc-arm-none-eabi-*-yyyymmdd-mac.tar.bz2"; then invoke ARM toolchain as "$ export PATH=$PATH:$install_dir/gcc-arm-none-eabi-*/bin; $ arm-none-eabi-gcc"

    ---Ubuntu: Unpack the tarball to the install directory, like this:
"$ cd $install_dir && tar xjf gcc-arm-none-eabi-*-yyyymmdd-linux.tar.bz2"; then invoke ARM toolchain as "$ export PATH=$PATH:$install_dir/gcc-arm-none-eabi-*/bin; $ arm-none-eabi-gcc"
